{"home":{"content":"# State vs Props\n\nWelcome to **Lecture 51**! Here is a brief class breakdown.\n\n## Learning Objectives\n1. Review + really understand / get comfortable with flux\n2. Introduce the concept of state vs props in data driven components\n\n## Game Plan\n\nQuick game plan for today\n\n## Review Flux\n\nLet's begin by going over what we covered last class.\n\nYou may clone this repo to get started:\n\n```bash \ngit clone --branch lecture_50_flux_p2 https://github.com/mottaquikarim/todolist_flux\n```\n\n## Practice Implementation\n\nNow, let's try and apply this for ourselves.\n\n### 1 -\nClone the following branch\n\n```bash\ngit clone --branch lecture_51_starterpack https://github.com/mottaquikarim/todolist_flux\n```\n\n### 2 -\n\nRefactor the code above so that:\n\n1. **store** is in it's own file\n2. **actions** are in own file\n3. **dispatcher** is in it's own file\n4. **index** just bootstraps the actions, dispatcher, and store\n\n### 3 -\n\nImplement **DELETE_TODO** action.\n\n## State VS. Props\n\nAn important concept in React and generally data driven component patterns is the concept of UI state vs UI props.\n\nWe will implement the following features to get a better idea of state and props and how they differ:\n\n1. todo list component displays CTA *or* currently added list of todos\n2. todo input component validates self based on user input\n3. todo input disables self until todo has posted\n\n## Component Lifecycle\n\nThe final concept to explore before heading over to React.js is the idea of the component lifecycle:\n\n### First load\n\nOn initial load of our component, the following series of callbacks could / should occur\n\n* **constructor**\n* **render**\n* **componentDidMount**\n\n### State changes\n\nOn state changes, the following series of callbacks could / should occur\n\n* **shouldComponentUpdate**\n* **componentWillUpdate**\n* **render**\n* **componentDidUpdate**\n\n### Props Changes\n\nProps changes are essentially identical to state changes with one exception (note the first item)\n\n* **componentWillReceiveProps**\n* **shouldComponentUpdate**\n* **componentWillUpdate**\n* **render**\n* **componentDidUpdate**\n\n","idx":0},"title":{"content":"Review Flux","idx":1},"desc":{"content":"Flux and component lifecycle","idx":2},"__list__":["home","title","desc"]}